rm(list=ls())
getwd()
setwd("~/GitHub/MinimalCell")
require("png")
require("dplyr")
require("vioplot")
require("grid")
require("dplyr")
require("knitr")
require("extrafont")
# Load mutation rate data
ma.raw <- read.csv("~/GitHub/MinimalCell/datafiles/MA_summary_for_R.csv", header = TRUE, sep =",")
# Preserve row names
ma <- as_tibble(ma.raw)
# Set data as factors and rename levels
ma$strain <- as.factor(ma$strain)
levels(ma$strain)[levels(ma$strain)=="MA_s1"] <- "Non-minimal"
levels(ma$strain)[levels(ma$strain)=="MA_3B"] <- "Minimal"
ma$strain <- factor(ma$strain, levels=c("Non-minimal","Minimal"))
# Subset mutation rate data by strain
mr.wt  <- filter(ma, strain== "Non-minimal") %>%
dplyr::select(per_nt_per_gen)
mr.min  <- filter(ma, strain== "Minimal") %>%
dplyr::select(per_nt_per_gen)
# Test for equal variance: P = 0.42 --> homogeneous variance
equal.var <- var.test(mr.wt$per_nt_per_gen, mr.min$per_nt_per_gen)
# Test for differences between treatments: P = 0.54 --> no difference
mr.ttest <- t.test(mr.wt$per_nt_per_gen, mr.min$per_nt_per_gen, var.equal = TRUE)
ma.type.raw <- read.csv("~/GitHub/MinimalCell/datafiles/MA_grouped_bar_mut.types.csv")
# Preserve row names
ma.type <- as_tibble(ma.type.raw)
# Set data as factors and rename levels
ma.type$strain <- as.factor(ma.type$strain)
ma.type$mut <- as.factor(ma.type$mut)
levels(ma.type$strain)[levels(ma.type$strain)=="s1"] <- "Non-minimal"
levels(ma.type$strain)[levels(ma.type$strain)=="3B"] <- "Minimal"
levels(ma.type$mut)[levels(ma.type$mut)=="SNM"] <- "Single-nucleotide"
ma.type$strain <- factor(ma.type$strain, levels=c("Non-minimal","Minimal"))
ma.type$mut <- factor(ma.type$mut, levels = c("Insertion", "Deletion",
"Over 100 bp","Single-nucleotide"))
ma.type <- ma.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
order.1 <- c(2, 4, 6, 1, 3, 5)
ma.type <- data.frame(ma.type, order.1)
ma.type <- ma.type[order(ma.type$order.1),]
# Make table for contingency analyses
ma.type.mat <- matrix(ma.type$count, ncol = 2, byrow = T)
colnames(ma.type.mat) <- c("minimal", "non-minimal")
rownames(ma.type.mat) <- c("insertion", "deletion", "snm")
ma.type.tab <- as.table(ma.type.mat)
ma.type.tab.margins <- addmargins(ma.type.tab)
# X-squared = 4.1617, df = 2, p-value = 0.1248
ma.type.chi <- chisq.test(ma.type.tab)
# Posthoc analysis
ma.type.z <- as.data.frame(ma.type.chi$stdres)
ma.type.x2 <- ma.type.z$Freq^2
ma.type.p <- pchisq(ma.type.x2, df = 1, lower.tail = FALSE)
ma.type.p.adj <- p.adjust(ma.type.p, method="BH")
ma.type.post.hoc <- data.frame(ma.type.z, ma.type.x2, ma.type.p, ma.type.p.adj)
colnames(ma.type.post.hoc) <- c("type", "strain", "z", "chi2", "p", "p.adj")
#       type   strain         z     chi2         p    p.adj
# 1 insertion  minimal -1.444750 2.087301 0.14852825 0.1721046
# 2  deletion  minimal -1.365472 1.864515 0.17210460 0.1721046
# 3       snm  minimal  1.931879 3.732157 0.05337443 0.1601233
# 4 insertion non-minimal  1.444750 2.087301 0.14852825 0.1721046
# 5  deletion non-minimal  1.365472 1.864515 0.17210460 0.1721046
# 6       snm non-minimal -1.931879 3.732157 0.05337443 0.1601233
ma.type
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
gene.type
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$strain <- as.factor(gene.type$strain)
gene.type$mut <- as.factor(gene.type$mut)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism","Other"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
#order.1 <- c(2, 4, 6, 1, 3, 5)
gene.type <- data.frame(gene.type, order)
gene.type <- gene.type[order(gene.type$order),]
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$strain <- as.factor(gene.type$strain)
gene.type$mut <- as.factor(gene.type$mut)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$strain <- as.factor(gene.type$strain)
gene.type$mut_type <- as.factor(gene.type$mut_type)
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$strain <- as.factor(gene.type$strain)
gene.type$mut_type <- as.factor(gene.type$mut_type)
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$Treatment <- as.factor(gene.type$Treatment)
gene.type$mut_type <- as.factor(gene.type$mut_type)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism","Other"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
gene.type
# Reorder for plotting
#order.1 <- c(2, 4, 6, 1, 3, 5)
gene.type <- data.frame(gene.type, order)
ma.type.raw <- read.csv("~/GitHub/MinimalCell/datafiles/MA_grouped_bar_mut.types.csv")
# Preserve row names
ma.type <- as_tibble(ma.type.raw)
# Set data as factors and rename levels
ma.type$strain <- as.factor(ma.type$strain)
ma.type$mut <- as.factor(ma.type$mut)
levels(ma.type$strain)[levels(ma.type$strain)=="s1"] <- "Non-minimal"
levels(ma.type$strain)[levels(ma.type$strain)=="3B"] <- "Minimal"
levels(ma.type$mut)[levels(ma.type$mut)=="SNM"] <- "Single-nucleotide"
ma.type$strain <- factor(ma.type$strain, levels=c("Non-minimal","Minimal"))
ma.type$mut <- factor(ma.type$mut, levels = c("Insertion", "Deletion",
"Over 100 bp","Single-nucleotide"))
ma.type <- ma.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
order.1 <- c(2, 4, 6, 1, 3, 5)
ma.type <- data.frame(ma.type, order.1)
ma.type <- ma.type[order(ma.type$order.1),]
may.type
ma.type
# Reorder for plotting
#order.1 <- c(2, 4, 6, 1, 3, 5)
gene.type <- gene.type[order(gene.type$order),]
gene.type
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 2, byrow = T)
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 3, byrow = T)
gene.type.mat
# Reorder for plotting
order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
gene.type <- data.frame(ma.type, order.1)
gene.type <- data.frame(gene.type, order.1)
gene.type
gene.type <- gene.type[order(gene.type$order),]
gene.type <- gene.type[order(gene.type$order.1),]
gene.type
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 3, byrow = T)
colnames(gene.type.mat) <- c("F", "G-F5","G-F24")
colnames(gene.type.mat) <- c("F", "G-F5","G-F24")
rownames(gene.type.mat) <- c("Transport", "Metabolism", "Other")
gene.type.tab <- as.table(gene.type.mat)
gene.type.tab.margins <- addmargins(gene.type.tab)
gene.type.tab
rownames(gene.type.mat) <- c("F", "G-F5","G-F24")
colnames(gene.type.mat) <- c("Transport", "Metabolism", "Other")
gene.type.tab <- as.table(gene.type.mat)
gene.type.tab.margins <- addmargins(gene.type.tab)
gene.type.tab
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$Treatment <- as.factor(gene.type$Treatment)
gene.type$mut_type <- as.factor(gene.type$mut_type)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism","Other"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
gene.type <- data.frame(gene.type, order.1)
gene.type <- gene.type[order(gene.type$order.1),]
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 3, byrow = T)
rownames(gene.type.mat) <- c("F", "G-F5","G-F24")
colnames(gene.type.mat) <- c("Transport", "Metabolism", "Other")
gene.type.tab <- as.table(gene.type.mat)
gene.type.tab.margins <- addmargins(gene.type.tab)
gene.type.tab
gene.type
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$Treatment <- as.factor(gene.type$Treatment)
gene.type$mut_type <- as.factor(gene.type$mut_type)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism","Other"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
gene.type <- data.frame(gene.type, order.1)
gene.type <- gene.type[order(gene.type$order.1),]
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 3, byrow = T)
rownames(gene.type.mat) <- c("F", "G-F5","G-F24")
colnames(gene.type.mat) <- c("Transport", "Metabolism", "Other")
gene.type.tab <- as.table(gene.type.mat)
gene.type.tab.margins <- addmargins(gene.type.tab)
gene.type.ta
gene.type.tab
rm(list=ls())
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$Treatment <- as.factor(gene.type$Treatment)
gene.type$mut_type <- as.factor(gene.type$mut_type)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism","Other"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
gene.type <- data.frame(gene.type, order.1)
gene.type <- gene.type[order(gene.type$order.1),]
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 3, byrow = T)
rownames(gene.type.mat) <- c("F", "G-F5","G-F24")
colnames(gene.type.mat) <- c("Transport", "Metabolism", "Other")
gene.type.tab <- as.table(gene.type.mat)
gene.type.tab.margins <- addmargins(gene.type.tab)
gene.type
gene.type.tab
# X-squared = 4.1617, df = 2, p-value = 0.1248
gene.type.chi <- chisq.test(gene.type.tab)
gene.type.chi
fisher.test(gene.type.tab)
# Posthoc analysis
gene.type.z <- as.data.frame(gene.type.chi$stdres)
gene.type.x2 <- gene.type.z$Freq^2
gene.type.p <- pchisq(gene.type.x2, df = 1, lower.tail = FALSE)
gene.type.p.adj <- p.adjust(gene.type.p, method="BH")
gene.type.post.hoc <- data.frame(gene.type.z, gene.type.x2, gene.type.p, gene.type.p.adj)
colnames(gene.type.post.hoc) <- c("type", "strain", "z", "chi2", "p", "p.adj")
gene.type.post.hoc
rm(list=ls())
# Reorder for plotting
#order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
#gene.type <- data.frame(gene.type, order.1)
gene.type <- gene.type[order(gene.type$order),]
rm(list=ls())
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq_2.categs.of.interest.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$Treatment <- as.factor(gene.type$Treatment)
gene.type$mut_type <- as.factor(gene.type$mut_type)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
#order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
#gene.type <- data.frame(gene.type, order.1)
gene.type <- gene.type[order(gene.type$order),]
rm(list=ls())
gene.type.raw <- read.csv("~/GitHub/Bifidobacterium/4_gene.types.chisq_2.categs.of.interest.csv")
# Preserve row names
gene.type <- as_tibble(gene.type.raw)
# Set data as factors and rename levels
gene.type$Treatment <- as.factor(gene.type$Treatment)
gene.type$mut_type <- as.factor(gene.type$mut_type)
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="F"] <- "F"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="P"] <- "G-F5"
levels(gene.type$Treatment)[levels(gene.type$Treatment)=="X"] <- "G-F24"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate metabolism"] <- "Metabolism"
levels(gene.type$mut_type)[levels(gene.type$mut_type)=="Carbohydrate transport"] <- "Transport"
gene.type$Treatment <- factor(gene.type$Treatment, levels=c("F","G-F5","G-F24"))
gene.type$mut_type <- factor(gene.type$mut_type, levels = c("Transport", "Metabolism"))
gene.type <- gene.type %>% mutate(prop2 = sprintf("%0.2f", prop))
# Reorder for plotting
#order.1 <- c(2, 1, 3, 5, 4, 6, 8, 7, 9)
#gene.type <- data.frame(gene.type, order.1)
gene.type <- gene.type[order(gene.type$order),]
# Make table for contingency analyses
gene.type.mat <- matrix(gene.type$count, ncol = 2, byrow = T)
rownames(gene.type.mat) <- c("F", "G-F5","G-F24")
colnames(gene.type.mat) <- c("Transport", "Metabolism")
gene.type.tab <- as.table(gene.type.mat)
gene.type.tab.margins <- addmargins(gene.type.tab)
gene.type.tab
# X-squared = 3.6573, df = 4, p-value = 0.4544
gene.type.chi <- chisq.test(gene.type.tab)
gene.type.chi
#Fisher test. p = 0.5154
fisher.test(gene.type.tab)
gene.type.z <- as.data.frame(gene.type.chi$stdres)
gene.type.x2 <- gene.type.z$Freq^2
gene.type.p <- pchisq(gene.type.x2, df = 1, lower.tail = FALSE)
gene.type.p.adj <- p.adjust(gene.type.p, method="BH")
gene.type.post.hoc <- data.frame(gene.type.z, gene.type.x2, gene.type.p, gene.type.p.adj)
colnames(gene.type.post.hoc) <- c("type", "strain", "z", "chi2", "p", "p.adj")
gene.type.post.hoc
