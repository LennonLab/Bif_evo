width = 1200, height = 900, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
plot(jitter(x.ind, amount = 0.5), dnds.NL.ind$dnds, xlim = c(0, 16),
ylim = c(-0.2, 2.5), type = "p", pch = 22, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
points(jitter(x.ind, amount = 0.5), dnds.L.ind$t.sum,
pch = 22, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add means
points(x, dnds.NL$mean, pch = 22,
bg = "blue", col = "blue", lwd = 1.25, cex = 2)
points(x, dnds.L$mean, pch = 22,
bg = "red", col = "red", lwd = 1.25, cex = 2)
# Add error bars
arrows(x0 = x, y0 = dnds.NL$mean,
y1 = dnds.NL$mean + dnds.NL$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = x, y0 = dnds.NL$mean,
y1 = dnds.NL$mean - dnds.NL$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = x, y0 = dnds.L$mean,
y1 = dnds.L$mean + dnds.L$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = x, y0 = dnds.L$mean,
y1 = dnds.L$mean - dnds.L$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
# Add ticks
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3, 5, 7, 9, 11, 13, 15), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(1, 3, 5, 7, 9, 11, 13, 15), labels = F)
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("-1", "0", "1", "2"), at = c(-1, 0, 1, 2))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(-11, 0, 1, 2), labels = F)
# Add horizontal line
abline(h = 1, col= "darkgray", lty = 2, lwd = 2)
# Add axis labels
mtext(expression('Strains'), side = 1,
outer = TRUE, cex = 1.5, line = -2.5, adj = 0.5)
mtext(expression('dN/dS'), side = 2,
outer = TRUE, cex = 1.5, line = -4, adj = 0.55)
# Add legend
legend(0.1, 205, legend=c("no longevity", "longevity"),
col=c("blue", "red"), pt.bg = c("blue", "red"),
pch = c(22, 22), pt.cex = 1.5, cex = 0.75, bty = "n")
# Add strain labels
text(x=0.38, y=-0.9,"wild type",srt = 60, xpd = NA, cex = 1)
text(x=2.4, y= -0.8, expression(paste("rpl10a",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=4.4, y= -0.8, expression(paste("pmr1",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=6.4, y= -0.8, expression(paste("sch9",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=8.4, y= -0.8, expression(paste("ypt6",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=10.4, y= -0.8, expression(paste("tor1",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=12.4, y= -0.8, expression(paste("tif2",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=14.4, y= -0.8, "LYS2", srt = 60, xpd = NA, cex = 1)
# Close plot device
dev.off()
graphics.off()
# Show plot
img <- readPNG("~/GitHub/XevoLong/figures/Fig6.ma.png")
grid.raster(img)
# Two-way ANOVA
fit <- aov(dnds ~ strain * treat, data = dat.ma)
summary(fit)
long.effect <- dat.ma %>%
group_by(treat) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds))
strain.effect <- dat.ma %>%
group_by(strain) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds))
t.tests.NL <- dnds.NL.ind  %>%
#group_by(strain) %>%
group_by(strain = fct_inorder(strain)) %>%
summarise(res = list(tidy(t.test(dnds, mu=1)))) %>%
unnest_legacy()
t.tests.L <- dnds.L.ind  %>%
group_by(strain) %>%
summarise(res = list(tidy(t.test(dnds, mu=1)))) %>%
unnest_legacy()
require(tidyr)
p <- rbind(t.tests.NL[,c(1:2,4)],t.tests.L[,c(1:2,4)])
# Benjamini Hochberg tests for multiple comparsions
p <- rbind(t.tests.NL[,c(1:2,4)],t.tests.L[,c(1:2,4)])
long.effect
strain.effect <- dat.ma %>%
group_by(strain) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds))
t.tests.NL <- dnds.NL.ind  %>%
#group_by(strain) %>%
group_by(strain = fct_inorder(strain)) %>%
summarise(res = list(tidy(t.test(dnds, mu=1)))) %>%
unnest_legacy()
tidy?
?tidy
require("tidyverse")
library(tidyverse)
dat <- read.csv("data/dnds_output_with.legend.csv")
dat <- dat[order(dat$order),]
dat$strain <- as.factor(dat$strain)
dnds.NL.ind <- filter(dat, treat == c("NL"))
dnds.NL <- dnds.NL.ind %>%
group_by(treat, strain = fct_inorder(strain)) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds), CL = CL(dnds))
# Longevity treatment
dnds.L.ind <- filter(dat, treat == c("L"))
dnds.L <- dnds.L.ind %>%
group_by(treat, strain = fct_inorder(strain)) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds), CL = CL(dnds))
x.ind <- c(rep(1,5), rep(3,5), rep(5,5), rep(7,5),
rep(9,5), rep(11,5), rep(13,5), rep(15,5))
x <- c(1, 3, 5, 7, 9, 11, 13, 15)
png(filename="~/GitHub/XevoLong/figures/Fig6.png",
width = 1200, height = 900, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
plot(jitter(x.ind, amount = 0.5), dnds.NL.ind$dnds, xlim = c(0, 16),
ylim = c(-0.2, 2.5), type = "p", pch = 22, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
points(jitter(x.ind, amount = 0.5), dnds.L.ind$t.sum,
pch = 22, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add means
points(x, dnds.NL$mean, pch = 22,
bg = "blue", col = "blue", lwd = 1.25, cex = 2)
points(x, dnds.L$mean, pch = 22,
bg = "red", col = "red", lwd = 1.25, cex = 2)
# Add error bars
arrows(x0 = x, y0 = dnds.NL$mean,
y1 = dnds.NL$mean + dnds.NL$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = x, y0 = dnds.NL$mean,
y1 = dnds.NL$mean - dnds.NL$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = x, y0 = dnds.L$mean,
y1 = dnds.L$mean + dnds.L$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = x, y0 = dnds.L$mean,
y1 = dnds.L$mean - dnds.L$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
# Add ticks
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3, 5, 7, 9, 11, 13, 15), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(1, 3, 5, 7, 9, 11, 13, 15), labels = F)
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("-1", "0", "1", "2"), at = c(-1, 0, 1, 2))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(-11, 0, 1, 2), labels = F)
# Add horizontal line
abline(h = 1, col= "darkgray", lty = 2, lwd = 2)
# Add axis labels
mtext(expression('Strains'), side = 1,
outer = TRUE, cex = 1.5, line = -2.5, adj = 0.5)
mtext(expression('dN/dS'), side = 2,
outer = TRUE, cex = 1.5, line = -4, adj = 0.55)
# Add legend
legend(0.1, 205, legend=c("no longevity", "longevity"),
col=c("blue", "red"), pt.bg = c("blue", "red"),
pch = c(22, 22), pt.cex = 1.5, cex = 0.75, bty = "n")
# Add strain labels
text(x=0.38, y=-0.9,"wild type",srt = 60, xpd = NA, cex = 1)
text(x=2.4, y= -0.8, expression(paste("rpl10a",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=4.4, y= -0.8, expression(paste("pmr1",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=6.4, y= -0.8, expression(paste("sch9",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=8.4, y= -0.8, expression(paste("ypt6",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=10.4, y= -0.8, expression(paste("tor1",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=12.4, y= -0.8, expression(paste("tif2",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=14.4, y= -0.8, "LYS2", srt = 60, xpd = NA, cex = 1)
# Close plot device
dev.off()
graphics.off()
# Show plot
img <- readPNG("~/GitHub/XevoLong/figures/Fig6.png")
grid.raster(img)
fit <- aov(dnds ~ strain * treat, data = dat)
summary(fit)
long.effect <- dat %>%
group_by(treat) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds))
strain.effect <- dat %>%
group_by(strain) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds))
t.tests.NL <- dnds.NL.ind  %>%
#group_by(strain) %>%
group_by(strain = fct_inorder(strain)) %>%
summarise(res = list(tidy(t.test(dnds, mu=1)))) %>%
unnest_legacy()
dat.ma <- read.csv("data/dnds_output_with.legend_ma-informed.csv")
dat.ma <- dat.ma[order(dat.ma$order),]
dat.ma$strain <- as.factor(dat.ma$strain)
```
dat.ma <- read.csv("data/dnds_output_with.legend_ma-informed.csv")
dat.ma <- dat.ma[order(dat.ma$order),]
dat.ma$strain <- as.factor(dat.ma$strain)
dnds.NL.ind <- filter(dat.ma, treat == c("NL"))
dnds.NL <- dnds.NL.ind %>%
group_by(treat, strain = fct_inorder(strain)) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds), CL = CL(dnds))
# Longevity treatment
dnds.L.ind <- filter(dat.ma, treat == c("L"))
dnds.L <- dnds.L.ind %>%
group_by(treat, strain = fct_inorder(strain)) %>%
dplyr::summarise(mean = mean(dnds), sem = sem(dnds), CL = CL(dnds))
x.ind <- c(rep(1,5), rep(3,5), rep(5,5), rep(7,5),
rep(9,5), rep(11,5), rep(13,5), rep(15,5))
x <- c(1, 3, 5, 7, 9, 11, 13, 15)
png(filename="~/GitHub/XevoLong/figures/Fig6.ma.png",
width = 1200, height = 900, res = 96*2)
plot.new()
par(mar = c(7, 7, 5, 7))
plot(jitter(x.ind, amount = 0.5), dnds.NL.ind$dnds, xlim = c(0, 16),
ylim = c(-0.2, 2.5), type = "p", pch = 22, bg = "lightblue",
col = "lightblue", cex = 0.75, ylab = "", xlab = "",
cex.lab = 1.5, las = 1, lwd = 2, yaxt = "n", xaxt = "n")
box(lwd = 2)
points(jitter(x.ind, amount = 0.5), dnds.L.ind$t.sum,
pch = 22, bg = "pink", col = "pink", lwd = 2, cex = 0.75)
# Add means
points(x, dnds.NL$mean, pch = 22,
bg = "blue", col = "blue", lwd = 1.25, cex = 2)
points(x, dnds.L$mean, pch = 22,
bg = "red", col = "red", lwd = 1.25, cex = 2)
# Add error bars
arrows(x0 = x, y0 = dnds.NL$mean,
y1 = dnds.NL$mean + dnds.NL$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = x, y0 = dnds.NL$mean,
y1 = dnds.NL$mean - dnds.NL$sem,
angle = 90, length = 0.1, lwd = 2, col = "blue")
arrows(x0 = x, y0 = dnds.L$mean,
y1 = dnds.L$mean + dnds.L$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
arrows(x0 = x, y0 = dnds.L$mean,
y1 = dnds.L$mean - dnds.L$sem,
angle = 90, length = 0.1, lwd = 2, col = "red")
# Add ticks
axis(side = 1, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at = c(1, 3, 5, 7, 9, 11, 13, 15), labels = F)
axis(side = 3, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(1, 3, 5, 7, 9, 11, 13, 15), labels = F)
axis(side = 2, lwd.ticks = 2, cex.axis = 1.25, las = 1,
labels = c("-1", "0", "1", "2"), at = c(-1, 0, 1, 2))
axis(side = 4, lwd.ticks = 2, cex.axis = 1.25, las = 1,
at=c(-11, 0, 1, 2), labels = F)
# Add horizontal line
abline(h = 1, col= "darkgray", lty = 2, lwd = 2)
# Add axis labels
mtext(expression('Strains'), side = 1,
outer = TRUE, cex = 1.5, line = -2.5, adj = 0.5)
mtext(expression('dN/dS'), side = 2,
outer = TRUE, cex = 1.5, line = -4, adj = 0.55)
# Add legend
legend(0.1, 205, legend=c("no longevity", "longevity"),
col=c("blue", "red"), pt.bg = c("blue", "red"),
pch = c(22, 22), pt.cex = 1.5, cex = 0.75, bty = "n")
# Add strain labels
text(x=0.38, y=-0.9,"wild type",srt = 60, xpd = NA, cex = 1)
text(x=2.4, y= -0.8, expression(paste("rpl10a",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=4.4, y= -0.8, expression(paste("pmr1",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=6.4, y= -0.8, expression(paste("sch9",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=8.4, y= -0.8, expression(paste("ypt6",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=10.4, y= -0.8, expression(paste("tor1",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=12.4, y= -0.8, expression(paste("tif2",Delta,)), srt = 60, xpd = NA, cex = 1)
text(x=14.4, y= -0.8, "LYS2", srt = 60, xpd = NA, cex = 1)
# Close plot device
dev.off()
graphics.off()
# Show plot
img <- readPNG("~/GitHub/XevoLong/figures/Fig6.ma.png")
grid.raster(img)
fit <- aov(dnds ~ strain * treat, data = dat.ma)
summary(fit)
dat <- read.csv("data/dnds_output_with.legend.csv")
dat <- dat[order(dat$order),]
dat$strain <- as.factor(dat$strain)
```
fit <- aov(dnds ~ strain * treat, data = dat)
summary(fit)
library(vegan)
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read_csv("~\\..\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20201104_OD.final_xevo_T0\\20201104_B.animalis.McK.mthd.csv")
#2023/12/10
#B. animalis subsp. lactis
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
#require("ggimage");require("grid")
#require("cowplot");
#These packages break my GPU if I try to run them twice.
#install.packages("magick")
#library(magick)
#####Don't run library(magick), it broke my Rstudio instance on Windows.
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read_csv("~\\..\\OneDrive - Indiana University\\Lab.Notebook\\20190820_Bifidobacterium\\data\\20201104_OD.final_xevo_T0\\20201104_B.animalis.McK.mthd.csv")
#require("ggimage");require("grid")
#require("cowplot");
#These packages break my GPU if I try to run them twice.
#install.packages("magick")
#library(magick)
#####Don't run library(magick), it broke my Rstudio instance on Windows.
setwd("C:\Users\rmoge\Documents\GitHub\Bifidobacterium\Data")
#require("ggimage");require("grid")
#require("cowplot");
#These packages break my GPU if I try to run them twice.
#install.packages("magick")
#library(magick)
#####Don't run library(magick), it broke my Rstudio instance on Windows.
setwd("~/GitHub/Bifidobacterium/")
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read_csv("./Data/breakout.20210512_2way.csv")
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read.csv("./Data/breakout.20210512_2way.csv")
#mydf0$carbon2<-factor(mydf0$carbon2, levels=c("F","G-F5","G-F24"))
#mydf0$carbon2<-recode_factor(mydf0$carbon2, `1` = "Fructose", `2` = "DP5", `3` = "DP24")
mydf0$carbon2<-recode(mydf0$carbon2, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
#######################################################
#2023/12/10
#B. animalis subsp. lactis
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
#mydf0$carbon2<-factor(mydf0$carbon2, levels=c("F","G-F5","G-F24"))
#mydf0$carbon2<-recode_factor(mydf0$carbon2, `1` = "Fructose", `2` = "DP5", `3` = "DP24")
mydf0$carbon2<-recode(mydf0$carbon2, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
mydf0
#mydf0$carbon2<-factor(mydf0$carbon2, levels=c("F","G-F5","G-F24"))
#mydf0$carbon2<-recode_factor(mydf0$carbon2, `1` = "Fructose", `2` = "DP5", `3` = "DP24")
mydf0$carbon2<-recode(mydf0$carbon.tech, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
mydf0$carbon2<-factor(mydf0$carbon2, levels=c("DP0","DP5","DP24"))
mydf0$carbon<-factor(mydf0$carbon, levels=c("Monomer","Low-DP","High-DP"))
mydf0
#######################################################
#2023/12/10
#B. animalis subsp. lactis
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
#require("ggimage");require("grid")
#require("cowplot");
#These packages break my GPU if I try to run them twice.
#install.packages("magick")
#library(magick)
#####Don't run library(magick), it broke my Rstudio instance on Windows.
setwd("~/GitHub/Bifidobacterium/")
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read.csv("./Data/breakout.20210512_2way.csv")
#mydf0$carbon2<-factor(mydf0$carbon2, levels=c("F","G-F5","G-F24"))
#mydf0$carbon2<-recode_factor(mydf0$carbon2, `1` = "Fructose", `2` = "DP5", `3` = "DP24")
mydf0$carbon2<-recode(mydf0$carbon.tech, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
mydf0$carbon2<-factor(mydf0$carbon2, levels=c("DP0","DP5","DP24"))
mydf0$carbon<-factor(mydf0$carbon, levels=c("Monomer","Low-DP","High-DP"))
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
#require("ggimage");require("grid")
#require("cowplot");
#These packages break my GPU if I try to run them twice.
#install.packages("magick")
#library(magick)
#####Don't run library(magick), it broke my Rstudio instance on Windows.
setwd("~/GitHub/Bifidobacterium")
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read_csv("./Data/OD_20201104.csv")
#Import ancestor data
#Import basic OD data on the 3 substrates
mydf0<-read.csv("./Data/OD_20201104.csv")
#mydf0$carbon2<-factor(mydf0$carbon2, levels=c("F","G-F5","G-F24"))
#mydf0$carbon2<-recode_factor(mydf0$carbon2, `1` = "Fructose", `2` = "DP5", `3` = "DP24")
mydf0$carbon2<-recode(mydf0$carbon2, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
mydf0$carbon2<-factor(mydf0$carbon2, levels=c("DP0","DP5","DP24"))
mydf0$carbon<-factor(mydf0$carbon, levels=c("Monomer","Low-DP","High-DP"))
mydf0
#Import OD data from nutrient breakout xpmnt
mybreakout<-read_csv("./Data/breakout_20210512_2way.csv")
#Import OD data from nutrient breakout xpmnt
mybreakout<-read.csv("./Data/breakout_20210512_2way.csv")
mybreakout$carbon.tech<-factor(mybreakout$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#mybreakout$carbon.plotting<-recode(mybreakout$carbon$tech)
#Import OD Data from the nutrient breakout xpmnt, formatted as a 2way ANOVA: Factor 1: G-F ratio Factor 2: are the Gs and Fs monomers or in fiber molecules?
mybreakout_2way<-read_csv("~/../OneDrive - Indiana University/Lab.Notebook/20190820_Bifidobacterium/data/nutrient.breakouts/20210512_OD.final_nutrient.breakout.ancor/20210512_B.animalis.McK.mthd_2way.enabled.csv")
#mybreakout$carbon.plotting<-recode(mybreakout$carbon$tech)
#Import OD Data from the nutrient breakout xpmnt, formatted as a 2way ANOVA: Factor 1: G-F ratio Factor 2: are the Gs and Fs monomers or in fiber molecules?
mybreakout_2way<-read.csv("~/../OneDrive - Indiana University/Lab.Notebook/20190820_Bifidobacterium/data/nutrient.breakouts/20210512_OD.final_nutrient.breakout.ancor/20210512_B.animalis.McK.mthd_2way.enabled.csv")
n the 3 substrates
#Import basic OD data on the 3 substrates
mydf0<-read_csv("./Data/breakout_20210512.csv")
#Import OD data from nutrient breakout xpmnt
mybreakout<-read.csv("./Data/breakout_20210512_2way.csv")
mybreakout$carbon.tech<-factor(mybreakout$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#Import OD data from nutrient breakout xpmnt
mybreakout<-read.csv("./Data/breakout_20210512_2way.csv")
mybreakout$carbon.tech<-factor(mybreakout$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#mybreakout$carbon.plotting<-recode(mybreakout$carbon$tech)
#Import OD Data from the nutrient breakout xpmnt, formatted as a 2way ANOVA: Factor 1: G-F ratio Factor 2: are the Gs and Fs monomers or in fiber molecules?
mybreakout_2way<-read.csv("~/../OneDrive - Indiana University/Lab.Notebook/20190820_Bifidobacterium/data/nutrient.breakouts/20210512_OD.final_nutrient.breakout.ancor/20210512_B.animalis.McK.mthd_2way.enabled.csv")
#Import OD data from nutrient breakout xpmnt
mybreakout<-read.csv("./Data/breakout_20210512.csv")
mybreakout$carbon.tech<-factor(mybreakout$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#mybreakout$carbon.plotting<-recode(mybreakout$carbon$tech)
#Import OD Data from the nutrient breakout xpmnt, formatted as a 2way ANOVA: Factor 1: G-F ratio Factor 2: are the Gs and Fs monomers or in fiber molecules?
mybreakout_2way<-read.csv("./Data/breakout_20210512_2way.csv")
mybreakout_2way$GF.ratio<-factor(mybreakout_2way$GF.ratio, levels=c("1:1","1:5","1:24"))
mybreakout_2way$Saccharide.size<-factor(mybreakout_2way$Saccharide.size, levels=c("Monomer","Oligomer"))
myhplc<-read.csv("./Data/metabolite.flux.data.csv")
myhplc$condition_short<-factor(myhplc$condition_short,levels=c("GF","F"))
myhplc$evo_trt<-factor(myhplc$evo_trt,levels=c("F","P","X","Anc"))
myhplc$evo_trt_plotting<-recode(myhplc$evo_trt, "F" = "DP0", "P" = "DP5", "X" = "DP24", "Anc" = "Ancestor")
myhplc$evo_trt_plotting<-factor(myhplc$evo_trt_plotting,levels=c("DP0","DP5","DP24","Ancestor"))
###########Import evolved data from timepoint T151, or 1003 generations of evolution.#############
###############Import basic OD data on the 3 substrates############
mydf151<-read.csv("./Data/OD_evolved_20210509.csv")
#mydf151$carbon2<-factor(mydf151$carbon2, levels=c("F","G-F5","G-F24"))
mydf151$carbon<-factor(mydf151$carbon, levels=c("Monomer","Low-DP","High-DP"))
mydf151$carbon2<-recode(mydf151$carbon2, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
mydf151$carbon2<-factor(mydf151$carbon2, levels=c("DP0","DP5","DP24"))
#Do a statistical test: Grown on their "home" diets, do the evolved populations differ in their max OD on each diet?
tubeaov151<-aov(mydf151$OD.600 ~ mydf151$carbon)
summary(tubeaov151)
TukeyHSD(tubeaov151)
#####
#######################Import OD data from nutrient breakout xpts with EVOLVED bacteria##############################
mybreakoutF<-read.csv("./Data/breakout_20210520_evolved_DP0.csv")
mybreakoutF$carbon.tech<-factor(mybreakoutF$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/MinimalCell"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
mybreakoutP$carbon.tech<-factor(mybreakoutP$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
mybreakoutP<-read.csv("./Data/breakout_20210526_evolved_DP5.csv")
mybreakoutP$carbon.tech<-factor(mybreakoutP$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#######################Import OD data from nutrient breakout xpts with EVOLVED bacteria##############################
mybreakoutF<-read.csv("./Data/breakout_20210520_evolved_DP0.csv")
---
title: "99. Non main figures"
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/MinimalCell"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/MinimalCell"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
getwd()
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/MinimalCell"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
getwd()
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/MinimalCell"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
getwd()
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
mydf0<-read_csv("./Data/OD_20201104.csv")
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/MinimalCell"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
getwd()
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
mydf0<-read.csv("./Data/OD_20201104.csv")
knitr::opts_knit$set(root.dir=normalizePath("~/GitHub/Bifidobacterium"))
#setwd("~/GitHub/Bifidobacterium")
getwd()
rm(list=ls())
getwd()
require("ggplot2");require("tidyverse");require("png");require("dplyr");require("grid");require("vegan");require("indicspecies");require("ggrepel");require("gridExtra")
mycols=c('black','black','black')
mycols_breakout=c('black','black','black','black','black','black','black','black')
mydf0<-read.csv("./Data/OD_20201104.csv")
mydf0$carbon2<-recode(mydf0$carbon2, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
mydf0$carbon2<-factor(mydf0$carbon2, levels=c("DP0","DP5","DP24"))
mydf0$carbon<-factor(mydf0$carbon, levels=c("Monomer","Low-DP","High-DP"))
#Import OD data from nutrient breakout xpt
mybreakout<-read.csv("./Data/breakout_20210512.csv")
mybreakout$carbon.tech<-factor(mybreakout$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#Import OD Data from the nutrient breakout xpt, formatted as a 2way ANOVA: Factor 1: G-F ratio Factor 2: are the Gs and Fs monomers or bound up in oligomers?
mybreakout_2way<-read.csv("./Data/breakout_20210512_2way.csv")
mybreakout_2way$GF.ratio<-factor(mybreakout_2way$GF.ratio, levels=c("1:1","1:5","1:24"))
mybreakout_2way$Saccharide.size<-factor(mybreakout_2way$Saccharide.size, levels=c("Monomer","Oligomer"))
#######################Import OD data from nutrient breakout xpts with EVOLVED bacteria##############################
mybreakoutF<-read.csv("./Data/breakout_20210520_evolved_DP0.csv")
mybreakoutF$carbon.tech<-factor(mybreakoutF$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
mybreakoutP<-read.csv("./Data/breakout_20210526_evolved_DP5.csv")
mybreakoutP$carbon.tech<-factor(mybreakoutP$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
mybreakoutX<-read.csv("./Data/breakout_20210531_evolved_DP24.csv")
mybreakoutX$carbon.tech<-factor(mybreakoutX$carbon.tech, levels=c("G", "F", "G:F 1:1","G-F","G:F 1:5", "G-F5","G:F 1:24","G-F24" ))
#######################Import anaerobic growth curve data##############################################################
grcvdata<-read.csv("./Data/growth.curves.anaerobic.csv")
grcvdata$carbon.tech.assay<-factor(grcvdata$carbon.tech.assay, levels=c("F", "G-F5","G-F24","Ancestor"))
grcvdata$carbon.tech.evo<-factor(grcvdata$carbon.tech.evo, levels=c("F", "G-F5","G-F24","Ancestor"))
grcvdata$carbon.plotting.assay<-recode(grcvdata$carbon.tech.assay, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
grcvdata$carbon.plotting.evo<-recode(grcvdata$carbon.tech.evo, "F" = "DP0", "G-F5" = "DP5", "G-F24" = "DP24")
